process PROD  = {
	service = MessageLogger
	{
      	untracked vstring destinations = {"warning.txt","error.txt","info.txt"}

      	vstring categories = {  "CaloSim",
				"EcalGeom",
				"EcalSim",
				"HcalGeom",
				"HcalSim",
				"HFShower"}
	vstring debugModules = { "*" }
	PSet error.txt         = {string threshold = "ERROR"  }
	PSet warning.txt       = {string threshold = "WARNING"}
	PSet info.txt          = {string threshold = "INFO"  }
   	}
	
	service = RandomNumberGeneratorService
	{
	      	untracked uint32 sourceSeed = 135799753
      		PSet moduleSeeds =
      		{
        	 	untracked uint32 VtxSmeared = 123456789
      		}
   	}

	# flat random E-gun, single pion
	#
	# to run it along with CMS detector simulation
	# (OscarProducer) make sure to select QGSP physics
	# list, instead DummyPhysics ("Dummy" has only EM 
	# process and wont know to model interactions of
	# hadrons with matter)
	#
	source = FlatRandomEGunSource
	{
		untracked int32 maxEvents = 20
		PSet PGunParameters =
		{
			# you can request more than 1 particle
			#vint32  PartID = {211,11}
			vint32 PartID = {211}
			double MinEta =  0.3045
			double MaxEta =  0.3045
			double MinPhi =  0.3045 # in radians
			double MaxPhi =  0.3045
			double MinE   =  99.99
			double MaxE   = 100.01
		}
		untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
	}

	module VtxSmeared = VertexGenerator 
	{
		string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
		double MeanX = 0.
		double MeanY = 0.
		double MeanZ = 0.
		double SigmaX = 0.015
		double SigmaY = 0.015
		double SigmaZ = 53.0  // in mm (as in COBRA/OSCAR)
	}

	#Geometry
	es_source = XMLIdealGeometryESSource 
	{ 
		FileInPath GeometryConfiguration = "SimG4CMS/Calo/test/data/testConfiguration.xml"
		# FileInPath GeometryConfiguration = "Geometry/CMSCommonData/data/SimConfiguration.xml"
		#the proper root node is set in the xml file
		string rootNodeName = ""
	}
	es_module = TrackerGeometricDetESModule {}

	#Magnetic Field
	es_source magfield = XMLIdealGeometryESSource {
		# FileInPath GeometryConfiguration ="SimG4Core/Application/test/FieldConfiguration.xml"
		FileInPath GeometryConfiguration ="Geometry/CMSCommonData/data/FieldConfiguration.xml"
	#the proper root node is set in the xml file
		string rootNodeName=""
	}
	es_module = VolumeBasedMagneticFieldESProducer {
		double findVolumeTolerance = 0.0
		untracked bool cacheLastVolume = true
		untracked bool timerOn = false
}

	module o1 = PoolOutputModule { untracked string fileName = "simevent.root" }
	module SimG4Object = OscarProducer 
	{ 
		#
		bool NonBeamEvent = false
		untracked int32 RunNumber = 1001
		#
		untracked int32 G4EventManagerVerbosity = 0
		untracked int32 G4StackManagerVerbosity = 0
		#
		bool UseMagneticField = true
		bool OverrideUserStackingAction = true
		bool StoreRndmSeeds = false
		bool RestoreRndmSeeds = false
		#
		# not sure if it should be (un)tracked ?
		#
		string PhysicsTablesDirectory = "PhysicsTables"
		bool StorePhysicsTables = false
		bool RestorePhysicsTables = false
		#
		#VPSet Watchers = {
		#	{ string type = "SimTracer"
		#	  bool verbose = true }
		#}
		PSet MagneticField =
		{
			double delta = 1.
		}
               	PSet Physics =
		{
			string type = "SimG4Core/Physics/DummyPhysics"
			bool DummyEMPhysics = true
			bool CutsPerRegion = true
			double DefaultCutValue = 1000. # cuts in cm, i.e. 10m 
			untracked int32 Verbosity = 0  # 1 will print cuts as they get set from DD
			                               # 2 will do as 1 + will dump Gean4 table of cuts			
		}
		PSet Generator = 
		{
			bool ApplyPtCuts = true
			bool ApplyEtaCuts = true
			bool ApplyPhiCuts = false
			double MinPhiCut = 0.
			double MaxPhiCut = 360.
			double MinEtaCut = -5.5
			double MaxEtaCut = 5.5
			double MinPtCut = 40.
			double MaxPtCut = 999999.
			untracked int32 Verbosity = 0
	        }
			
		# this PSet wasn't actually used...
		# it's currently (temp.) disabled
		# but will soon re-appear in generators
		#
		PSet VertexGenerator =
		{
			string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
			double MeanX = 0.
			double MeanY = 0.
			double MeanZ = 0.
			double SigmaX = 0.015
			double SigmaY = 0.015
			double SigmaZ = 5.3
		}

		PSet RunAction = { string StopFile = "StopRun" }
		PSet EventAction =
		{
			bool CollapsePrimaryVertices = false
			string StopFile = "StopRun"
			#
			untracked bool debug = false
		}
		PSet TrackingAction = 
		{ 
			#
			untracked bool DetailedTiming = false 
		}
		PSet UtilityActions =
		{
			string type = "SimG4Core/UtilityAction/TrackingVerboseAction"
			untracked bool  DEBUG = false
			untracked bool  CheckForHighEtPhotons = false
			untracked int32 EventMin = 0
			untracked int32 EventMax = 0
			untracked int32 EventStep = 1
			untracked int32 TrackMin = 0
			untracked int32 TrackMax = 0
			untracked int32 TrackStep = 1
			untracked int32 VerboseLevel = 0
		}
 		PSet SteppingAction =
		{
			bool   KillBeamPipe = true
			double CriticalEnergyForVacuum = 2.0
			double CriticalDensity = 1.e-15
			#
			untracked int32  Verbosity = 0
		}
		PSet CaloSD = 
		{
			double EminTrack = 1.0
			untracked int32  CheckHits = 25
			untracked bool   UseMap = true
			untracked int32  Verbosity = 0
			untracked bool   DetailedTiming = false
		}
		PSet ECalSD = 
		{
			bool   UseBirkLaw = false
			double BirkC1 = 0.013
			double BirkC2 = 9.6e-6
		}
		PSet HCalSD = 
		{
			bool   UseBirkLaw = false
			double BirkC1 = 0.013
			double BirkC2 = 9.6e-6
			bool   UseShowerLibrary = true
			bool   TestNumberingScheme = false
		}
		PSet CaloTrkProcessing = 
		{
			bool   TestBeam  = false
			double EminTrack = 0.01
		}                     
		PSet HFShower =    
		{
			double ProbMax   = 0.7268
			double CFibre    = 0.50
		}
		PSet HFShowerLibrary = 
		{
			FileInPath FileName = "SimG4CMS/Calo/data/hfshowerlibrary_lhep.root"
			string TreeEMID  = "h3"
			string TreeHadID = "h8"
		}
		PSet HFCherenkov = 
		{
			double RefIndex        = 1.459
			double Lambda1         = 280.0
			double Lambda2         = 700.0
			double Aperture        = 0.33
			double ApertureTrapped = 0.22
			double Gain            = 0.33
			bool   CheckSurvive    = false
		}
		VPSet Watchers = {
		{	string type            = "HcalTestAnalysis"
			PSet HcalTestAnalysis = 
			{
				double  Eta0          = 0.0
				double  Phi0          = 0.0
				int32   LayerGrouping = 1
				int32   CentralTower  = 404
				vstring Names         = {"HcalHits",
							"EcalHitsEB",
							"EcalHitsEE"}
				string  FileName      = "HcalTestAnalysis.root"
			}
			PSet HcalQie = 
			{
				double  qToPE         = 4.0
				int32   BinOfMax      = 6
				int32   SignalBuckets = 2
				int32   PreSamples    = 0
				int32   NumOfBuckets  = 10
				double  SigmaNoise    = 0.5
				double  EDepPerPE     = 0.0005
				int32   BaseLine      = 4
			}
		}}

	}
	path p1 = { VtxSmeared, SimG4Object }
	endpath outpath = { o1 }
}		
